/**
 * Flexbox Layout System
 * 
 * This file provides utility classes for creating flexbox layouts.
 * It includes containers, rows, columns, and alignment utilities.
 */

/* === Flex Container === */
.flex {
    display: flex;
  }
  
  .inline-flex {
    display: inline-flex;
  }
  
  /* === Direction === */
  .flex-row {
    flex-direction: row;
  }
  
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  
  .flex-col {
    flex-direction: column;
  }
  
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  
  /* === Wrap === */
  .flex-wrap {
    flex-wrap: wrap;
  }
  
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  
  .flex-wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  
  /* === Justify Content (Main Axis) === */
  .justify-start {
    justify-content: flex-start;
  }
  
  .justify-end {
    justify-content: flex-end;
  }
  
  .justify-center {
    justify-content: center;
  }
  
  .justify-between {
    justify-content: space-between;
  }
  
  .justify-around {
    justify-content: space-around;
  }
  
  .justify-evenly {
    justify-content: space-evenly;
  }
  
  /* === Align Items (Cross Axis) === */
  .items-start {
    align-items: flex-start;
  }
  
  .items-end {
    align-items: flex-end;
  }
  
  .items-center {
    align-items: center;
  }
  
  .items-baseline {
    align-items: baseline;
  }
  
  .items-stretch {
    align-items: stretch;
  }
  
  /* === Align Content (Cross Axis - Multiple Lines) === */
  .content-start {
    align-content: flex-start;
  }
  
  .content-end {
    align-content: flex-end;
  }
  
  .content-center {
    align-content: center;
  }
  
  .content-between {
    align-content: space-between;
  }
  
  .content-around {
    align-content: space-around;
  }
  
  .content-stretch {
    align-content: stretch;
  }
  
  /* === Individual Item Alignment === */
  .self-auto {
    align-self: auto;
  }
  
  .self-start {
    align-self: flex-start;
  }
  
  .self-end {
    align-self: flex-end;
  }
  
  .self-center {
    align-self: center;
  }
  
  .self-stretch {
    align-self: stretch;
  }
  
  /* === Flex Properties === */
  .flex-1 {
    flex: 1 1 0%;
  }
  
  .flex-auto {
    flex: 1 1 auto;
  }
  
  .flex-initial {
    flex: 0 1 auto;
  }
  
  .flex-none {
    flex: none;
  }
  
  /* Flex Grow */
  .grow-0 {
    flex-grow: 0;
  }
  
  .grow {
    flex-grow: 1;
  }
  
  /* Flex Shrink */
  .shrink-0 {
    flex-shrink: 0;
  }
  
  .shrink {
    flex-shrink: 1;
  }
  
  /* === Gap === */
  .gap-0 {
    gap: 0;
  }
  
  .gap-xs {
    gap: var(--spacing-xs);
  }
  
  .gap-sm {
    gap: var(--spacing-sm);
  }
  
  .gap-md {
    gap: var(--spacing-md);
  }
  
  .gap-lg {
    gap: var(--spacing-lg);
  }
  
  .gap-xl {
    gap: var(--spacing-xl);
  }
  
  /* Row Gap */
  .gap-y-0 {
    row-gap: 0;
  }
  
  .gap-y-xs {
    row-gap: var(--spacing-xs);
  }
  
  .gap-y-sm {
    row-gap: var(--spacing-sm);
  }
  
  .gap-y-md {
    row-gap: var(--spacing-md);
  }
  
  .gap-y-lg {
    row-gap: var(--spacing-lg);
  }
  
  .gap-y-xl {
    row-gap: var(--spacing-xl);
  }
  
  /* Column Gap */
  .gap-x-0 {
    column-gap: 0;
  }
  
  .gap-x-xs {
    column-gap: var(--spacing-xs);
  }
  
  .gap-x-sm {
    column-gap: var(--spacing-sm);
  }
  
  .gap-x-md {
    column-gap: var(--spacing-md);
  }
  
  .gap-x-lg {
    column-gap: var(--spacing-lg);
  }
  
  .gap-x-xl {
    column-gap: var(--spacing-xl);
  }
  
  /* === Common Flex Patterns === */
  /* Centered content (both horizontally and vertically) */
  .flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  /* Spaced evenly horizontally with vertical centering */
  .flex-between-center {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  /* Stack layout (vertical column with even spacing) */
  .flex-stack {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }
  
  /* Row layout (horizontal row with even spacing) */
  .flex-row-layout {
    display: flex;
    gap: var(--spacing-md);
  }
  
  /* Equal width columns */
  .flex-equal-columns {
    display: flex;
    gap: var(--spacing-md);
  }
  
  .flex-equal-columns > * {
    flex: 1;
  }
  
  /* Responsive breakpoints for flex direction */
  @media (max-width: 768px) {
    .md\:flex-col {
      flex-direction: column;
    }
    
    .md\:flex-row {
      flex-direction: row;
    }
  }
  
  @media (max-width: 576px) {
    .sm\:flex-col {
      flex-direction: column;
    }
    
    .sm\:flex-row {
      flex-direction: row;
    }
  }
